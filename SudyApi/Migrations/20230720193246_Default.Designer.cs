// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudandoApi.Data.Contexts;

#nullable disable

namespace SudyApi.Migrations
{
    [DbContext(typeof(SudyContext))]
    [Migration("20230720193246_Default")]
    partial class Default
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SudyApi.Models.ChapterModel", b =>
                {
                    b.Property<int>("ChapterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ModulesCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ChapterId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Chapters");
                });

            modelBuilder.Entity("SudyApi.Models.CollegeSubjectModel", b =>
                {
                    b.Property<int>("CollegeSubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("SemesterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CollegeSubjectId");

                    b.HasIndex("SemesterId");

                    b.ToTable("CollegeSubjects");
                });

            modelBuilder.Entity("SudyApi.Models.CourseModel", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CourseName")
                        .HasColumnType("longtext");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<int?>("SemestersCount")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("SudyApi.Models.InstitutionModel", b =>
                {
                    b.Property<int>("institutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AbbreviationName")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .HasColumnType("longtext");

                    b.HasKey("institutionId");

                    b.ToTable("Institutions");
                });

            modelBuilder.Entity("SudyApi.Models.SemesterModel", b =>
                {
                    b.Property<int>("SemesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CurrentSemester")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("institutionId")
                        .HasColumnType("int");

                    b.HasKey("SemesterId");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.HasIndex("institutionId");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("SudyApi.Models.SubjectModel", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CollegeSubjectId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserModelUserId")
                        .HasColumnType("int");

                    b.HasKey("SubjectId");

                    b.HasIndex("CollegeSubjectId");

                    b.HasIndex("UserModelUserId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("SudyApi.Models.UserInformation", b =>
                {
                    b.Property<int>("UserInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Cep")
                        .HasColumnType("longtext");

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Rg")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserInformationId");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.ToTable("Users_Information", (string)null);
                });

            modelBuilder.Entity("SudyApi.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<int?>("ResetPassawordCount")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserInformationId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserInformationId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SudyApi.Models.ChapterModel", b =>
                {
                    b.HasOne("SudyApi.Models.SubjectModel", "Subject")
                        .WithMany("Chapters")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("SudyApi.Models.CollegeSubjectModel", b =>
                {
                    b.HasOne("SudyApi.Models.SemesterModel", "Semester")
                        .WithMany("CollegeSubjects")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("SudyApi.Models.SemesterModel", b =>
                {
                    b.HasOne("SudyApi.Models.CourseModel", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.HasOne("SudyApi.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("SudyApi.Models.InstitutionModel", "Institution")
                        .WithMany()
                        .HasForeignKey("institutionId");

                    b.Navigation("Course");

                    b.Navigation("Institution");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SudyApi.Models.SubjectModel", b =>
                {
                    b.HasOne("SudyApi.Models.CollegeSubjectModel", "CollegeSubject")
                        .WithMany("Subjects")
                        .HasForeignKey("CollegeSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SudyApi.Models.UserModel", null)
                        .WithMany("Subjects")
                        .HasForeignKey("UserModelUserId");

                    b.Navigation("CollegeSubject");
                });

            modelBuilder.Entity("SudyApi.Models.UserModel", b =>
                {
                    b.HasOne("SudyApi.Models.UserInformation", "UserInformation")
                        .WithMany()
                        .HasForeignKey("UserInformationId");

                    b.Navigation("UserInformation");
                });

            modelBuilder.Entity("SudyApi.Models.CollegeSubjectModel", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("SudyApi.Models.SemesterModel", b =>
                {
                    b.Navigation("CollegeSubjects");
                });

            modelBuilder.Entity("SudyApi.Models.SubjectModel", b =>
                {
                    b.Navigation("Chapters");
                });

            modelBuilder.Entity("SudyApi.Models.UserModel", b =>
                {
                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
